@inherits LayoutComponentBase
@using Intranet.Extension
@using Microsoft.AspNetCore.Components.Authorization;
@using Intranet.Modelos.LoginModel;
@inject AuthenticationStateProvider autenticacionProvider
@inject NavigationManager navManager


<PageTitle>Intranet</PageTitle>

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
       @*  <div class="top-row px-4 bg-light">        
            <a @onclick="CerrarSesion" href="javascript:void(0)">Salir</a>
        </div>  *@
        <MudAppBar style="background-color: #00bbb4" Fixed="false">
                <AuthorizeView>
                    <Authorized>
                    <spn>Bienvenido, @context.User.Identity!.Name</spn>
                    @* <MudSpacer />
                    <spn @onclick="CerrarSesion" style="cursor: pointer;">Salir</spn> *@
                    </Authorized>
              </AuthorizeView>
        </MudAppBar>
 
        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

<MudThemeProvider />
<MudDialogProvider FullWidth="true"
                   MaxWidth="MaxWidth.Small"
                   CloseButton="true"
                   DisableBackdropClick="true"
                   NoHeader="true"
                   Position="DialogPosition.Center"
                   CloseOnEscapeKey="true"
                   />
<MudSnackbarProvider />

@code {
    private string Nombre = string.Empty;
    protected override async Task OnInitializedAsync()
    {
       // Nombre = "Bienvenido";

    }


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            Nombre = "Bienvenido";
        }
                     
    }
    
    
    
    private async Task CerrarSesion()
    {
       // await _sessionStorage.GuardarLogin(false);
        //var autenticacionExt = (AutenticacionExtension)autenticacionProvider;
        //await autenticacionExt.ActualizarEstadoAutenticacion(null);
       // navManager.NavigateTo("/", true);
    }
}
