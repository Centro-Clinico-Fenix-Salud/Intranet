@* @inherits LayoutComponentBase

<PageTitle>Intranet</PageTitle>

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4" style="background-color: #00bbb4">
            <a href="https://docs.microsoft.com/aspnet/" target="_blank">About</a>
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div> *@
@inherits LayoutComponentBase
@using Intranet.Extension
@using Microsoft.AspNetCore.Components.Authorization;
@inject AuthenticationStateProvider autenticacionProvider
@inject NavigationManager navManager

<PageTitle>Intranet</PageTitle>

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

<<<<<<< Updated upstream
    <main>      
        <MudAppBar style="background-color: #00bbb4" Fixed="false">
            <AuthorizeView>
                <Authorized>
                    <spn>Bienvenido, @context.User.Identity!.Name</spn>
                    
                </Authorized>
            </AuthorizeView>
        </MudAppBar>
=======
    <main>

       @*  <div class="top-row px-4">          
            <a @onclick="CerrarSesion" href="javascript:void(0)">Salir</a>
        </div> *@
>>>>>>> Stashed changes

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

<MudThemeProvider />
<MudDialogProvider FullWidth="true"
                   MaxWidth="MaxWidth.Small"
                   CloseButton="true"
                   DisableBackdropClick="true"
                   NoHeader="true"
                   Position="DialogPosition.Center"
                   CloseOnEscapeKey="true" />
<MudSnackbarProvider />

@code {
<<<<<<< Updated upstream
    private string Nombre = string.Empty;
    protected override async Task OnInitializedAsync()
    {
        // Nombre = "Bienvenido";

    }


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            Nombre = "Bienvenido";
        }

    }



    private async Task CerrarSesion()
    {
        // await _sessionStorage.GuardarLogin(false);
        //var autenticacionExt = (AutenticacionExtension)autenticacionProvider;
        //await autenticacionExt.ActualizarEstadoAutenticacion(null);
        // navManager.NavigateTo("/", true);
=======

    private async Task CerrarSesion()
    {
        var autenticacionExt = (AutenticacionExtension)autenticacionProvider;
        await autenticacionExt.ActualizarEstadoAutenticacion(null);
        navManager.NavigateTo("/", true);
>>>>>>> Stashed changes
    }
}

